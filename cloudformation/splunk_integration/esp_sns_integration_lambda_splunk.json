{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "ESP SNS Template",
  "Outputs": {
    "SNSTopicArn": {
      "Description": "Evident Integration SNS Topic ARN",
      "Value": {
        "Ref": "EvidentSNSIntegration"
      }
    },
    "EvidentRoleArn": {
      "Description": "Evident Service Role (IAM) ARN",
      "Value": {
        "Fn::GetAtt": [
          "EvidentServiceRoleSNSIntegration",
          "Arn"
        ]
      }
    },
    "ExternalId": {
      "Description": "External ID",
      "Value": {
        "Fn::Select": [ 2, { "Fn::Split" : [ "/", {"Ref": "AWS::StackId"} ] }]
      }
    },
    "EspSplunkLambda": {
      "Description": "Lambda function that parses SNS message and push to Splunk",
      "Value": { "Ref": "EvidentSplunkLambda"}
    }
  },
  "Parameters": {
    "EspSNSDisplayName": {
      "Description": "Display Name for the SNS Topic",
      "MinLength": "1",
      "Type": "String",
      "Default": "Evident-alert-to-SNS-integration"
    },

    "EspEvidentAccountId": {
      "Description": "EvidentIO Account ID",
      "Default": "613698206329",
      "AllowedPattern": "[0-9]+",
      "MaxLength": "12",
      "MinLength": "12",
      "Type": "String"
    },
    "SourceCodeBucket": {
      "Description": "Specify the S3Bucket for Lambda source code",
      "MinLength": "1",
      "Type": "String",
      "Default": "esp-onboarding"
    },
    "SourceCodeKeyPath": {
      "Description": "Specify the S3 Path for Lambda source code",
      "MinLength": "1",
      "Type": "String",
      "Default": "splunk_integration/esp_splunk_lambda.zip"
    },
    "SplunkHttpCollectorUrl": {
      "Description": "Specify the URL for Splunk HTTP Event Collector",
      "MinLength": "1",
      "Type": "String",
      "Default": "https://<HOST>:<PORT>/services/collector"
    },
    "SplunkHttpcollectorToken": {
      "Description": "Specify the Splunk HTTP Event Collector Token",
      "MinLength": "1",
      "Type": "String",
      "Default": "<TOKEN>"
    },

  },
  "Resources": {
    "EvidentServiceRoleSNSIntegration": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "EvidentCrossAccountAccess",
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": {
                    "Fn::Select": [ 2, { "Fn::Split" : [ "/", {"Ref": "AWS::StackId"} ] }]
                  }
                }
              },
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::",
                      {
                        "Ref": "EspEvidentAccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "EvidentSNSIntegration",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": {
                    "Ref": "EvidentSNSIntegration"
                  }
                }
              ]
            }
          }
        ]
      }
    },

    "EvidentSNSIntegration": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": {"Ref": "EspSNSDisplayName"},
        "Subscription": [{
          "Endpoint": {"Fn::GetAtt": [ "EvidentSplunkLambda", "Arn" ]},
          "Protocol": "lambda"
        }]
      },
      "DependsOn": ["EvidentSplunkLambda"]
    },

    "EvidentSplunkLambdaRole" : {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ 
            {
              "Sid": "EvidentSplunkLambda",
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        }
      }
    },

    "EvidentSplunkLambda" : {
      "Type": "AWS::Lambda::Function",
      "Description": "ESP alert export to Splunk through HTTP Event Collector",
      "Properties": {
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt" : [ "EvidentSplunkLambdaRole", "Arn"] },
        "Code": {
          "S3Bucket": { "Ref" : "SourceCodeBucket"},
          "S3Key": {"Ref" : "SourceCodeKeyPath"}
        },
        "Runtime": "nodejs6.10",
        "Timeout": "10",
        "Environment": {
          "Variables": {
            "SPLUNK_HEC_URL" : {"Ref": "SplunkHttpCollectorUrl"},
            "SPLUNK_HEC_TOKEN": {"Ref": "SplunkHttpcollectorToken"}
          }
        }
      }
    },

    "EvidentSplunkLambdaInvokePerm": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": { "Ref": "EvidentSNSIntegration" },
        "FunctionName": { "Fn::GetAtt": [ "EvidentSplunkLambda", "Arn" ]}
      }
    }
  }
}